009275235b3124571b0e5f393897be5a
test('should return status code 200 with error 1', () => {
  expect(1).toEqual(1);
});
test('should return status code 200 with error 2', () => {
  expect(1).toEqual(1);
});
test('should return status code 200 with error 3', () => {
  expect(1).toEqual(1);
}); //
// const request = require('supertest');
// const nock = require('nock');
//
// const app = require('../../server');
//
// beforeEach(() => {
//   nock.cleanAll();
// });
//
// test('should return status code 200 with error', async () => {
//   expect.assertions(1);
//
//   nock('http://uinames.com/api')
//     .get('/')
//     .reply(500);
//
//   const { body } = await request(app)
//     .get('/proxy')
//     .set('Accept', 'application/json');
//
//   expect(body).toHaveProperty('error');
// });
//
// // test('should return status code 200', async () => {
// //   expect.assertions(4);
// //
// //   const { body } = await request(app)
// //     .get('/proxy')
// //     .set('Accept', 'application/json');
// //
// //   expect(body).toHaveProperty('name');
// //   expect(body).toHaveProperty('surname');
// //   expect(body).toHaveProperty('region');
// //   expect(body).toHaveProperty('gender');
// // });
//
// test('should return status expected response', async () => {
//   expect.assertions(4);
//
//   nock('http://uinames.com/api')
//   .get('/')
//   .reply(200, {
//     name: 'test-name',
//     surname: 'test-surname',
//     region: 'test-region',
//     gender: 'test-gender'
//   });
//
//   const { body } = await request(app)
//     .get('/proxy')
//     .set('Accept', 'application/json');
//
//   expect(body).toHaveProperty('name', 'test-name');
//   expect(body).toHaveProperty('surname', 'test-surname');
//   expect(body).toHaveProperty('region', 'test-region');
//   expect(body).toHaveProperty('gender', 'test-gender');
// });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS0yLnRlc3QuanMiXSwibmFtZXMiOlsidGVzdCIsImV4cGVjdCIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiJBQUVBQSxJQUFJLENBQUMsNENBQUQsRUFBK0MsTUFBTTtBQUN2REMsRUFBQUEsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVQyxPQUFWLENBQWtCLENBQWxCO0FBQ0QsQ0FGRyxDQUFKO0FBSUFGLElBQUksQ0FBQyw0Q0FBRCxFQUErQyxNQUFNO0FBQ3ZEQyxFQUFBQSxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVVDLE9BQVYsQ0FBa0IsQ0FBbEI7QUFDRCxDQUZHLENBQUo7QUFJQUYsSUFBSSxDQUFDLDRDQUFELEVBQStDLE1BQU07QUFDdkRDLEVBQUFBLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVUMsT0FBVixDQUFrQixDQUFsQjtBQUNELENBRkcsQ0FBSixDLENBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJcblxudGVzdCgnc2hvdWxkIHJldHVybiBzdGF0dXMgY29kZSAyMDAgd2l0aCBlcnJvciAxJywgKCkgPT4ge1xuICBleHBlY3QoMSkudG9FcXVhbCgxKTtcbn0pO1xuXG50ZXN0KCdzaG91bGQgcmV0dXJuIHN0YXR1cyBjb2RlIDIwMCB3aXRoIGVycm9yIDInLCAoKSA9PiB7XG4gIGV4cGVjdCgxKS50b0VxdWFsKDEpO1xufSk7XG5cbnRlc3QoJ3Nob3VsZCByZXR1cm4gc3RhdHVzIGNvZGUgMjAwIHdpdGggZXJyb3IgMycsICgpID0+IHtcbiAgZXhwZWN0KDEpLnRvRXF1YWwoMSk7XG59KTtcblxuXG5cbi8vXG4vLyBjb25zdCByZXF1ZXN0ID0gcmVxdWlyZSgnc3VwZXJ0ZXN0Jyk7XG4vLyBjb25zdCBub2NrID0gcmVxdWlyZSgnbm9jaycpO1xuLy9cbi8vIGNvbnN0IGFwcCA9IHJlcXVpcmUoJy4uLy4uL3NlcnZlcicpO1xuLy9cbi8vIGJlZm9yZUVhY2goKCkgPT4ge1xuLy8gICBub2NrLmNsZWFuQWxsKCk7XG4vLyB9KTtcbi8vXG4vLyB0ZXN0KCdzaG91bGQgcmV0dXJuIHN0YXR1cyBjb2RlIDIwMCB3aXRoIGVycm9yJywgYXN5bmMgKCkgPT4ge1xuLy8gICBleHBlY3QuYXNzZXJ0aW9ucygxKTtcbi8vXG4vLyAgIG5vY2soJ2h0dHA6Ly91aW5hbWVzLmNvbS9hcGknKVxuLy8gICAgIC5nZXQoJy8nKVxuLy8gICAgIC5yZXBseSg1MDApO1xuLy9cbi8vICAgY29uc3QgeyBib2R5IH0gPSBhd2FpdCByZXF1ZXN0KGFwcClcbi8vICAgICAuZ2V0KCcvcHJveHknKVxuLy8gICAgIC5zZXQoJ0FjY2VwdCcsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4vL1xuLy8gICBleHBlY3QoYm9keSkudG9IYXZlUHJvcGVydHkoJ2Vycm9yJyk7XG4vLyB9KTtcbi8vXG4vLyAvLyB0ZXN0KCdzaG91bGQgcmV0dXJuIHN0YXR1cyBjb2RlIDIwMCcsIGFzeW5jICgpID0+IHtcbi8vIC8vICAgZXhwZWN0LmFzc2VydGlvbnMoNCk7XG4vLyAvL1xuLy8gLy8gICBjb25zdCB7IGJvZHkgfSA9IGF3YWl0IHJlcXVlc3QoYXBwKVxuLy8gLy8gICAgIC5nZXQoJy9wcm94eScpXG4vLyAvLyAgICAgLnNldCgnQWNjZXB0JywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbi8vIC8vXG4vLyAvLyAgIGV4cGVjdChib2R5KS50b0hhdmVQcm9wZXJ0eSgnbmFtZScpO1xuLy8gLy8gICBleHBlY3QoYm9keSkudG9IYXZlUHJvcGVydHkoJ3N1cm5hbWUnKTtcbi8vIC8vICAgZXhwZWN0KGJvZHkpLnRvSGF2ZVByb3BlcnR5KCdyZWdpb24nKTtcbi8vIC8vICAgZXhwZWN0KGJvZHkpLnRvSGF2ZVByb3BlcnR5KCdnZW5kZXInKTtcbi8vIC8vIH0pO1xuLy9cbi8vIHRlc3QoJ3Nob3VsZCByZXR1cm4gc3RhdHVzIGV4cGVjdGVkIHJlc3BvbnNlJywgYXN5bmMgKCkgPT4ge1xuLy8gICBleHBlY3QuYXNzZXJ0aW9ucyg0KTtcbi8vXG4vLyAgIG5vY2soJ2h0dHA6Ly91aW5hbWVzLmNvbS9hcGknKVxuLy8gICAuZ2V0KCcvJylcbi8vICAgLnJlcGx5KDIwMCwge1xuLy8gICAgIG5hbWU6ICd0ZXN0LW5hbWUnLFxuLy8gICAgIHN1cm5hbWU6ICd0ZXN0LXN1cm5hbWUnLFxuLy8gICAgIHJlZ2lvbjogJ3Rlc3QtcmVnaW9uJyxcbi8vICAgICBnZW5kZXI6ICd0ZXN0LWdlbmRlcidcbi8vICAgfSk7XG4vL1xuLy8gICBjb25zdCB7IGJvZHkgfSA9IGF3YWl0IHJlcXVlc3QoYXBwKVxuLy8gICAgIC5nZXQoJy9wcm94eScpXG4vLyAgICAgLnNldCgnQWNjZXB0JywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbi8vXG4vLyAgIGV4cGVjdChib2R5KS50b0hhdmVQcm9wZXJ0eSgnbmFtZScsICd0ZXN0LW5hbWUnKTtcbi8vICAgZXhwZWN0KGJvZHkpLnRvSGF2ZVByb3BlcnR5KCdzdXJuYW1lJywgJ3Rlc3Qtc3VybmFtZScpO1xuLy8gICBleHBlY3QoYm9keSkudG9IYXZlUHJvcGVydHkoJ3JlZ2lvbicsICd0ZXN0LXJlZ2lvbicpO1xuLy8gICBleHBlY3QoYm9keSkudG9IYXZlUHJvcGVydHkoJ2dlbmRlcicsICd0ZXN0LWdlbmRlcicpO1xuLy8gfSk7XG4iXX0=