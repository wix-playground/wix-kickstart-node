{"version":3,"sources":["api.test.js"],"names":["test","expect","toEqual"],"mappings":"AAEAA,IAAI,CAAC,6CAAD,EAAgD,MAAM;AACxDC,EAAAA,MAAM,CAAC,CAAD,CAAN,CAAUC,OAAV,CAAkB,CAAlB;AACD,CAFG,CAAJ;AAIAF,IAAI,CAAC,4CAAD,EAA+C,MAAM;AACvDC,EAAAA,MAAM,CAAC,CAAD,CAAN,CAAUC,OAAV,CAAkB,CAAlB;AACD,CAFG,CAAJ;AAIAF,IAAI,CAAC,4CAAD,EAA+C,MAAM;AACvDC,EAAAA,MAAM,CAAC,CAAD,CAAN,CAAUC,OAAV,CAAkB,CAAlB;AACD,CAFG,CAAJ,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n\ntest('should return status code 200 with error 10', () => {\n  expect(1).toEqual(1);\n});\n\ntest('should return status code 200 with error 2', () => {\n  expect(1).toEqual(1);\n});\n\ntest('should return status code 200 with error 3', () => {\n  expect(1).toEqual(1);\n});\n\n\n\n//\n// const request = require('supertest');\n// const nock = require('nock');\n//\n// const app = require('../../server');\n//\n// beforeEach(() => {\n//   nock.cleanAll();\n// });\n//\n// test('should return status code 200 with error', async () => {\n//   expect.assertions(1);\n//\n//   nock('http://uinames.com/api')\n//     .get('/')\n//     .reply(500);\n//\n//   const { body } = await request(app)\n//     .get('/proxy')\n//     .set('Accept', 'application/json');\n//\n//   expect(body).toHaveProperty('error');\n// });\n//\n// // test('should return status code 200', async () => {\n// //   expect.assertions(4);\n// //\n// //   const { body } = await request(app)\n// //     .get('/proxy')\n// //     .set('Accept', 'application/json');\n// //\n// //   expect(body).toHaveProperty('name');\n// //   expect(body).toHaveProperty('surname');\n// //   expect(body).toHaveProperty('region');\n// //   expect(body).toHaveProperty('gender');\n// // });\n//\n// test('should return status expected response', async () => {\n//   expect.assertions(4);\n//\n//   nock('http://uinames.com/api')\n//   .get('/')\n//   .reply(200, {\n//     name: 'test-name',\n//     surname: 'test-surname',\n//     region: 'test-region',\n//     gender: 'test-gender'\n//   });\n//\n//   const { body } = await request(app)\n//     .get('/proxy')\n//     .set('Accept', 'application/json');\n//\n//   expect(body).toHaveProperty('name', 'test-name');\n//   expect(body).toHaveProperty('surname', 'test-surname');\n//   expect(body).toHaveProperty('region', 'test-region');\n//   expect(body).toHaveProperty('gender', 'test-gender');\n// });\n"]}